# Copyright (C) 2018 Embecosm Limited.

# Contributor Jeremy Bennett <jeremy.bennett@embecosm.com>

# This file is part of BEEBS

# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.

# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

# SPDX-License-Identifier: GPL-3.0-or-later

set_board_info beebs,benchmarks "$env(BENCHMARKS)"

proc beebs_load { file } {
    set GDB riscv32-unknown-elf-gdb
    set GDB_SERVER riscv32-gdbserver

    # load and run
    spawn $GDB -ex "set height 0" \
       -ex "file $file" \
       -ex "target remote | $GDB_SERVER -c ri5cy --stdin" \
       -ex "stepi" \
       -ex "stepi" \
       -ex "load" \
       -ex "jump *_start" \
       -ex "quit"

    # extract cycle count
    expect {
       -re ".*Cycle count: (\[0-9\]+)" {
           set cycle_count $expect_out(1,string)
       }
       timeout {
           unresolved "$file: get cycle count (timeout)\n"
           return fail
       }
    }
    # check exited normally
    expect {
       -re "\[Inferior 1 \(\(1,1)) exited normally]" {
           return [list pass $cycle_count]
       }
       timeout {
           unresolved "$file: exited normally (timeout)\n"
       }
    }

    return fail
}
